#include <EMailSender.h>
#include "thingProperties.h"
#include <ESP8266WiFi.h>
#include "Arduino.h"
//#include <Wire.h>
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/63743901-de11-4eda-b8e3-bb7f8a8c5c79 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float caudal;
  float conductividad;
  float presion;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

//Designaciones WIFI
const char* ssid = "Galaxy S20 FE4927";  //Galaxy S20 FE4927
const char* password = "heladera";
uint8_t connection_state = 0;
uint16_t reconnect_interval = 10000;

EMailSender emailSend("fsiotservice@gmail.com", "busherujqbsxcnfl");

//float caudal, presion, conductividad;
String data;
/*
uint8_t WiFiConnect(const char* nSSID = nullptr, const char* nPassword = nullptr) {
  static uint16_t attempt = 0;
  Serial.print("Connecting to ");
  if (nSSID) {
    WiFi.begin(nSSID, nPassword);
    Serial.println(nSSID);
  }

  uint8_t i = 0;
  uint32_t startTime = millis();  // Guarda el tiempo de inicio

  while (WiFi.status() != WL_CONNECTED && i++ < 50) {
    if (millis() - startTime >= 200) {  // Comprueba si han pasado 200 ms
      startTime = millis();             // Actualiza el tiempo de inicio
      Serial.print(".");
    }
  }
  ++attempt;
  Serial.println("");
  if (i == 51) {
    Serial.print("Connection: TIMEOUT on attempt: ");
    Serial.println(attempt);
    if (attempt % 2 == 0)
      Serial.println("Check if access point available or SSID and Password\r\n");
    return false;
  }
  Serial.println("Connection: ESTABLISHED");
  Serial.print("Got IP address: ");
  Serial.println(WiFi.localIP());
  return true;
}

void Awaits() {
  uint32_t ts = millis();
  while (!connection_state) {
    delay(50);
    if (millis() > (ts + reconnect_interval) && !connection_state) {
      connection_state = WiFiConnect();
      ts = millis();
    }
  }
}
*/
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

    // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando a WiFi...");
  }

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  if (digitalRead(D3) == LOW) { //Prueba de envio de mails a traves de pin D3
    // Envía el correo electrónico
    EMailSender::EMailMessage message;
    message.subject = "Alerta: Pin D3 conectado";
    message.message = "El pin D3 está conectado.";

    EMailSender::Response resp = emailSend.send("fsiotservice@gmail.com", message);
    if (resp.status == 1) {
      Serial.println("Correo enviado correctamente.");
    } else {
      Serial.println("Error al enviar el correo.");
    }
    // Espera un tiempo antes de volver a verificar
    delay(6000);  // Espera 1 minuto
  }

if (Serial.available()) {
    data = Serial.readStringUntil('\n');

    int idx1 = data.indexOf(',');
    caudal = data.substring(0, idx1).toFloat();

    data = data.substring(idx1 + 1);
    int idx2 = data.indexOf(',');
    float var2 = data.substring(0, idx2).toFloat();

    float var3 = data.substring(idx2 + 1).toFloat();

    Serial.print("Caudal: ");
    Serial.println(caudal);
    Serial.print("Var2: ");
    Serial.println(var2);
    Serial.print("Var3: ");
    Serial.println(var3);
  }
  
  
}




